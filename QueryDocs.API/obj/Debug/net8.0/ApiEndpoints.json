[
  {
    "ContainingType": "QueryDocs.API.Controllers.AuthenticationController",
    "Method": "LoginUser",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginModel",
        "Type": "QueryDocs.Domain.Dtos.UserLogin",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "QueryDocs.API.Controllers.AuthenticationController",
    "Method": "RegisterUser",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerModel",
        "Type": "QueryDocs.Domain.Dtos.UserRegister",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "QueryDocs.API.Controllers.DocumentsController",
    "Method": "UploadFile",
    "RelativePath": "api/docs/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "QueryDocs.API.Controllers.QueryController",
    "Method": "AskQuery",
    "RelativePath": "api/query",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "QueryDocs.Domain.Models.QueryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "QueryDocs.API.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateModel",
        "Type": "QueryDocs.Domain.Dtos.UserUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "QueryDocs.API.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "QueryDocs.Infrastructure.ResponseHelpers.ServiceResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]